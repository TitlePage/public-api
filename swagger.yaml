swagger: '2.0'
info:
  description: 'The Australian Publishers Association API'
  version: 1.0.0
  title: APA API
  termsOfService: https://www.publishers.asn.au/Web/Terms-and-Conditions.aspx
  contact:
    email: support@stsoftware.com.au
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: api.titlepage.com.au
basePath: /v1
tags:
  - name: Public API
    description: Publically callable ( no autentication ) APIs
    externalDocs:
      description: Find out more
      url: https://titlepage.com.au
  - name: Bookseller API
    description: Authorized bookseller APIs
  - name: Not Recommended
    description: Not recommended APIs    
schemes:
  - https
paths:
  /availablity/{ISBN-13}:
    get:
      tags:
        - Public API
      summary: Find the availability of an ISBN
      description: Returns nearest bookstore with available stock, if longitude/latitude is not given then the approximate location of the user's IP address will be used. 
      operationId: findISBN
      produces:
        - application/json
      parameters:
        - name: ISBN-13
          in: path
          description: ISBN-13 of the title check the avalibilty
          required: true
          type: integer
          format: int64
          minimum: 9780000000000
          maximum: 9790000000000
        - name: latitude
          in: query
          type: number
          minimum: -90
          maximum: 90
        - name: longitude
          in: query
          type: number
          minimum: -90
          maximum: 90
        - name: radius
          in: query
          type: integer
          minimum: 1
          default: 10
          maximum: 100
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Location'
        '400':
          description: Invalid ISBN supplied
        '404':
          description: ISBN not found
  /onix/{ISBN-13}:
    get:
      tags:
        - Public API
      summary: Redirects to a REDACTED ONIX 3.0 file for the ISBN
      description: Redirects (status 302) to the REDACTED ONIX 3.0 file stored on S3. The file name just a function of the ISBN-13 number so must be refetched to validate that the client has the latest copy.
      operationId: publicOnix
      produces:
        - application/json
      parameters:
        - name: ISBN-13
          in: path
          description: ISBN-13 of the title to return
          required: true
          type: integer
          format: int64
          minimum: 9780000000000
          maximum: 9790000000000
      responses:
        '302':
          description: Redirect to the REDACTED ONIX 3.0 file on S3'
        '400':
          description: Invalid ISBN supplied
        '404':
          description: ISBN not found
  /onix-simplified/{ISBN-13}:
    get:
      tags:
        - Public API
        - Not Recommended
      summary: Redirects to a Simplified ONIX 3.0 file for the ISBN
      description: Redirects (status 302) to the Simplified ONIX 3.0 file stored on S3. The file name is just a function of the ISBN-13 number so must be re-fetched to validate that the client has the latest copy.
      operationId: simplifiedOnix
      produces:
        - application/json
      parameters:
        - name: ISBN-13
          in: path
          description: ISBN-13 of the title to return
          required: true
          type: integer
          format: int64
          minimum: 9780000000000
          maximum: 9790000000000
      responses:
        '302':
          description: Redirect to the simplified ONIX 3.0 file on S3
        '400':
          description: Invalid ISBN supplied
        '404':
          description: ISBN not found          
  /pre-built/{NAME}:
    get:
      tags:
        - Public API
      summary: Returns a list of ISBN-13 based on the "pre-built" criteria.
      description: The list of ISBN-13 returns can then be in turn used to call /onix or /onix-full 
      operationId: publicPreBuilt
      produces:
        - application/json
      parameters:
        - name: NAME
          in: path
          description: The name of the pre-built list
          required: true
          type: string
      responses:
        '200':
          description: A list of ISBN-13
        '400':
          description: Invalid ISBN supplied
        '404':
          description: ISBN not found          
  /onix-full/{ISBN-13}:
    get:
      tags:
        - Bookseller API
      summary: Returns to FULL ONIX 3.0 file for the ISBN
      description: Redirects (status 302) to the full unredacted ONIX 3.0 file stored on S3. The file name is a SHA512 of the file content thus can be cached permanently on the client-side.  
      operationId: fullOnix
      produces:
        - application/json
      parameters:
        - name: ISBN-13
          in: path
          description: ISBN-13 of the title to return
          required: true
          type: integer
          format: int64
          minimum: 9780000000000
          maximum: 9790000000000
      responses:
        '302':
          description: Redirect to the full ONIX 3.0 file on S3
        '400':
          description: Invalid ISBN supplied
        '404':
          description: ISBN not found
      security:
        - api_key: []
  /search:
    get:
      tags:
        - Bookseller API
      summary: Search for a matching set of titles.
      description: The matching ISBN-13 list. Maximum of 1000 matching ISBN-13
      operationId: searchOnix
      produces:
        - application/json
      parameters:
        - name: title
          in: query
          description: The title to search
          type: string
          format: int64
      responses:
        '200':
          description: List of matching ISBN-13
        '400':
          description: No valid query parameters
      security:
        - api_key: []   

  /request-token/:
    post:
      tags:
        - Public API
      summary: Request a public token
      description: ''
      operationId: requestToken
      produces:
        - application/json
      parameters:
        - in: body
          name: tokenRequest
          description: Request a public token
          required: true
          schema:
            $ref: '#/definitions/TokenRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Request
  /bookseller-token/:
    post:
      tags:
        - Bookseller API
      summary: Request a book seller token.
      description: ''
      operationId: requestBooksellerToken
      produces:
        - application/json
      parameters:
        - in: body
          name: tokenBooksellerRequest
          description: Request a booker seller token
          required: true
          schema:
            $ref: '#/definitions/TokenBooksellerRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Request        
  /stock/{ISBN-13}:
    put:
      tags:
        - Bookseller API
      summary: Update a title stock levels
      description: ''
      operationId: updateStock
      produces:
        - application/json
      parameters:
        - in: path
          name: ISBN-13
          description: The number of books in stock
          required: true
          type: integer
          format: int64
          minimum: 9780000000000
          maximum: 9790000000000
        - in: body
          name: in-stock
          description: The number of books in stock
          required: true
          schema:
            $ref: '#/definitions/Stock'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Order
      security:
        - api_key: []
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Stock:
    type: object
    properties:
      in-stock:
        type: integer
        format: int64
      back-order:
        type: integer
        format: int64
    xml:
      name: Order
  TokenRequest:
    type: object
    properties:
      firstName:
        type: string
        example: Joe
      lastName:
        type: string
        example: Public
      email:
        type: string
        example: joe@example.com
      website:
        type: string
        example: https://example.com
      typeBlog:
        type: boolean
      typeRetail:
        type: boolean
      typePublisherDistributor:
        type: boolean
      typeOther: 
        type: boolean
      requireOnixSimple:
        type: boolean
      requireOnixFull:
        type: boolean
      requireImage:
        type: boolean
      requireWordPress:
        type: boolean

      requireShopify:
        type: boolean
  TokenBooksellerRequest:
    type: object
    properties:
      firstName:
        type: string
        example: Jane
      lastName:
        type: string
        example: Doe
      email:
        type: string
        example: jane@books.example.com
      website:
        type: string
        example: https://books.example.com
      postcode:
        type: integer
        minimum: 1000
        maximum: 8000
        example: 2010
      latitude:
        type: number
        minimum: -90
        maximum: 90
      longitude:
        type: number
        minimum: -90
        maximum: 90 
  Location:
    type: array
    items:
      type: object
      properties:
        bookstore: 
          type: string
          example: Books Are Us
        address: 
          type: string
          example: 1 Main Street, Sydney, NSW
        availability:
          type: boolean
