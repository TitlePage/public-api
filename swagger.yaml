swagger: '2.0'
info:
  description: The Australian Publishers Association API
  version: 1.0.0
  title: APA API
  termsOfService: https://www.publishers.asn.au/Web/Terms-and-Conditions.aspx
  contact:
    email: support@stsoftware.com.au
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: api.titlepage.com.au
basePath: /v1
tags:
  - name: Public API
    description: Publically callable ( no autentication ) APIs
    externalDocs:
      description: Find out more
      url: https://titlepage.com.au
  - name: Bookseller API
    description: Authorized bookseller APIs
  - name: Non-Bookseller API
    description: Authorized publisher APIs
schemes:
  - https
paths:
  /publisher/stock/{ISBN-13}:
    put:
      tags:
        - Non-Bookseller API
      summary: Update the stock & availability of an ISBN-13 for a publisher (Block 6 update)
      description: Product supply details (inlcuding stock OnHand, OnOrder and CBO)
      operationId: publsiherStock
      consumes:
        - application/xml
      produces:
        - application/json
      parameters:
        - name: ISBN-13
          in: path
          description: ISBN-13 of the title to be updated.
          required: true
          type: integer
          format: int64
          minimum: 9780000000000
          maximum: 9790000000000
        - in: body
          name: productSupply
          description: The ONIX 3.0 Block 6
          required: true
          schema:
            $ref: '#/definitions/PublisherStock'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid stock information supplied ( validation issue)
        '404':
          description: ISBN-13 not found for this publisher.
      security:
        - api_key: []
  /availablity/{ISBN-13}:
    get:
      tags:
        - Public API
      summary: Find booksellers within the given radius with avaiable stock of the ISBN-13.
      description: "Returns a list of bookstores with available stock with the radius, if longitude/latitude is not given then the approximate location of the user's IP address will be used. The results will be ordered by distance from the client. If no bookstores have any stock of the required book an empty (zero length) array will be returned.\n
      Browser API to get the current location (requires user permission) https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API
      "
      operationId: findISBN
      produces:
        - application/json
      parameters:
        - name: ISBN-13
          in: path
          description: ISBN-13 of the title check the avalibilty
          required: true
          type: integer
          format: int64
          minimum: 9780000000000
          maximum: 9790000000000
        - name: latitude
          in: query
          type: number
          minimum: -90
          maximum: 90
        - name: longitude
          in: query
          type: number
          minimum: -90
          maximum: 90
        - name: radius
          description: The number of killometers from the client to the book store ( as the crow flies)
          in: query
          type: integer
          minimum: 1
          default: 10
          maximum: 100
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Location'
        '400':
          description: Invalid ISBN-13 supplied
        '404':
          description: ISBN-13 not found
  /onix/{ISBN-13}:
    get:
      tags:
        - Public API
      summary: Redirects to a REDACTED ONIX 3.0 file for the ISBN-13
      description: Redirects (status 302) to the REDACTED ONIX 3.0 file stored on S3. The file name just a function of the ISBN-13 number so must be refetched to validate that the client has the latest copy.
      operationId: publicOnix
      produces:
        - application/json
      parameters:
        - name: ISBN-13
          in: path
          description: ISBN-13 of the title to return
          required: true
          type: integer
          format: int64
          minimum: 9780000000000
          maximum: 9790000000000
      responses:
        '302':
          description: Redirect to the REDACTED ONIX 3.0 file on S3', example "https://public.onix.s3.aws.com/001/9780000000001.xml.gz"
        '400':
          description: Invalid ISBN-13 supplied
        '404':
          description: ISBN-13 not found
  
  /list/pre-built:
    get: 
      tags:
        - Bookseller API
      summary: Return a list of all the available pre-built files.
      description: "TODO: create the response array schema"
      operationId: listPreBuilt
      responses:
        '200':
          description: A list pre-built files
      security:
        - api_key: []      
  /pre-built/{NAME}:
    get:
      tags:
        - Bookseller API
      summary: Returns the pre-built ONIX 3.0 file.
      description: Full ONIX files pre-built. 
      operationId: preBuilt
      produces:
        - application/json
      parameters:
        - name: NAME
          in: path
          description: The name of the pre-built list
          required: true
          type: string
      responses:
        '200':
          description: The full ONIX 3.0 file.
        '404':
          description: NAME not found
      security:
        - api_key: []
  /onix-full/{ISBN-13}:
    get:
      tags:
        - Bookseller API
      summary: Returns to FULL ONIX 3.0 file for the ISBN-13
      description: Redirects (status 302) to the full unredacted ONIX 3.0 file stored on S3. The file name is a SHA512 of the file content thus can be cached permanently on the client-side.
      operationId: fullOnix
      produces:
        - application/json
      parameters:
        - name: ISBN-13
          in: path
          description: ISBN-13 of the title to return
          required: true
          type: integer
          format: int64
          minimum: 9780000000000
          maximum: 9790000000000
      responses:
        '302':
          description: Redirect to the full ONIX 3.0 file on S3
        '400':
          description: Invalid ISBN-13 supplied
        '404':
          description: ISBN-13 not found
      security:
        - api_key: []
  /search:
    get:
      tags:
        - Bookseller API
      summary: Search by Title or ISBN-13 will return a list of matching full ONIX 3.0 URLs.
      description: "Allow search by title or a list of ISBN-13. Response the matching ISBN-13 list. Maximum of 1000 matching ISBN-13\n
        
        @TODO  How do we handle missing ISBN-13?\n
        "
      operationId: searchOnix
      produces:
        - application/json
      parameters:
        - name: title
          in: query
          description: The title to search
          type: string
        - name: ISBN-13
          in: query
          description: A list (comma seperated) of ISBN-13
          type: string
          format: int64
      responses:
        '200':
          description: List of matching full ONIX 3.0 URLs
          schema:
            $ref: '#/definitions/SearchResult'
        '400':
          description: No valid query parameters
      security:
        - api_key: []
  /request-token/:
    post:
      tags:
        - Public API
      summary: Request a public token
      description: ''
      operationId: requestToken
      produces:
        - application/json
      parameters:
        - in: body
          name: tokenRequest
          description: Request a public token
          required: true
          schema:
            $ref: '#/definitions/TokenRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Request
  /bookseller-token/:
    post:
      tags:
        - Bookseller API
      summary: Request a book seller token.
      description: ''
      operationId: requestBooksellerToken
      produces:
        - application/json
      parameters:
        - in: body
          name: tokenBooksellerRequest
          description: Request a booker seller token
          required: true
          schema:
            $ref: '#/definitions/TokenBooksellerRequest'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Request
      security:
        - api_key: []
  /sale:
    post:
      tags:
        - Bookseller API
      summary: Update stock levels & sales of a series of ISBN-13.
      description: 'The ISBN-13/timestamp will be used to de-duplicate sales/stock levels'
      operationId: batchStock
      produces:
        - application/json
      parameters:
        - in: body
          name: Sale data
          required: true
          schema:
            $ref: '#/definitions/Sale'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Sale
      security:
        - api_key: []
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  PublisherStock:
    description: "Multiple Block 6"
    type: string
    xml:
      name: ProductSupply
    properties:
      Market:
        type: object
        properties:
          Territory:
            type: object
            properties:
              CountriesIncluded:
                type: string
                example: AU
      SupplyDetail:
        type: object
        properties:
          Supplier:
            type: object
            properties:
              SupplierRole:
                type: integer
                example: "00"
              SupplierIdentifier:
                type: object
                properties:
                  SupplierIDType:
                    type: number
                    example: 07
                  IDValue:
                    type: number
                    example: 9021000
              SupplierName:
                type: string
                example: XYZ Distribution Services
              TelephoneNumber:
                type: string
                example: +61 2 2000 2000
              FaxNumber:
                type: string
                example: +61 2 2000 2000
              EmailAddress:
                type: string
                example: email@exmaple.com
          ProductAvailability:
            type: number
            example: 10
          SupplyDate:
            type: object
            properties:
              SupplyDateRole:
                type: number
                example: 02
              Date:
                type: string
                format: date
                example: 20220501
                properties:
                  dateformat:
                    type: number
                    example: "00"
                    xml:
                      attribute: true
          Stock:
            type: object
            properties:
              OnHand:
                type: integer
                minimum: 0
                example: 25
              OnOrder:
                type: integer
                minimum: 0
                example: 44
          Price:
            type: object
            properties:
              PriceType:
                type: number
                example: "02"
              PriceAmount:
                type: number
                example: 22.99
              Tax:
                type: object
                properties:
                  TaxType:
                    type: number
                    example: 01
                  TaxRateCode:
                    type: string
                    example: S
                  TaxRatePercent:
                    type: number
                    example: 15
                  TaxableAmount:
                    type: number
                    example: 19.99
                  TaxAmount:
                    type: number
                    example: 3.00
              CurrencyCode:
                type: string
                example: AUD
  TokenRequest:
    type: object
    properties:
      firstName:
        type: string
        example: Joe
      lastName:
        type: string
        example: Public
      email:
        type: string
        example: joe@example.com
      website:
        type: string
        example: https://example.com
      typeBlog:
        type: boolean
      typeRetail:
        type: boolean
      typePublisherDistributor:
        type: boolean
      typeOther:
        type: boolean
      requireOnixSimple:
        type: boolean
      requireOnixFull:
        type: boolean
      requireImage:
        type: boolean
      requireWordPress:
        type: boolean
      requireShopify:
        type: boolean
  TokenBooksellerRequest:
    type: object
    properties:
      firstName:
        type: string
        example: Jane
      lastName:
        type: string
        example: Doe
      email:
        type: string
        example: jane@books.example.com
      website:
        type: string
        example: https://books.example.com
      postcode:
        type: integer
        minimum: 1000
        maximum: 8000
        example: 2010
      latitude:
        type: number
        minimum: -90
        maximum: 90
      longitude:
        type: number
        minimum: -90
        maximum: 90
  Location:
    description: "Location of the bookstore with stock"
    type: array
    items:
      type: object
      properties:
        bookstore:
          type: string
          example: Books Are Us
        address:
          type: string
          example: 1 Main Street, Sydney, NSW
        phone: 
          type: string
          example: "(02) 555 1234"
        website: 
          type: string
          example: "https://books.example.com"
  Sale:
    description: Deduplicate the sales/stock data by use of the timestamp.
    type: array
    items:
      type: object
      properties:
        ISBN-13:
          type: integer
          format: int64
          example: 9780000000001
        timestamp:
          type: string
          format: date-time
          example: "2022-06-25T14:23:10Z"
        sold:
          type: integer
          format: int64 
          minimum: 0
        refunded:
          description: The book was returned/refunded by the client
          type: integer
          format: int64            
          minimum: 0
        returned:
          description: The book was returned to the distributor/publisher
          type: integer
          format: int64            
          minimum: 0 
        restocked:
          description: The number of books restocked from the distributor/publisher.
          type: integer
          format: int64            
          minimum: 0          
        shrinkage:
          description: Reduction in the number of books due to wastage or theft.
          type: integer
          format: int64
          minimum: 0          
        in-stock:
          type: integer
          format: int64
          minimum: 0
        back-order:
          type: integer
          format: int64
          minimum: 0
  SearchResult:
    type: array
    items:
      type: object
      properties:
        ISBN-13:
          type: integer
          format: int64
          example: 9780000000001
        title:
          type: string
          example: Happy Holidays.
        onix-url:
          type: string
          description: Broken into sub directories by modulas of the ISBN-13 number.
          example: https://public.onix.s3.aws.com/001/9780000000001.xml.gz
